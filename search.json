[{"path":"https://zcrowleythemark.github.io/TheMarkUSA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 TheMarkUSA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zack Crowley. Author, maintainer. Mark, USA Inc.. Copyright holder, funder.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Crowley Z (2023). TheMarkUSA: Helper Functions Mark, USA Inc. https://github.com/zcrowleyTheMark/themark, https://zcrowleythemark.github.io/TheMarkUSA/.","code":"@Manual{,   title = {TheMarkUSA: Helper Functions for The Mark, USA Inc},   author = {Zack Crowley},   year = {2023},   note = {https://github.com/zcrowleyTheMark/themark, https://zcrowleythemark.github.io/TheMarkUSA/}, }"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"themarkusa-","dir":"","previous_headings":"","what":"Helper Functions for The Mark, USA Inc","title":"Helper Functions for The Mark, USA Inc","text":"goal TheMarkUSA make data cleaning creation visualizations easier faster Mark USA, Inc. functions TheMarkUSA create visuals Mark USA branding helper functions common data cleaning manipulation tasks use everyone Mark USA, Inc.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions for The Mark, USA Inc","text":"can install development version TheMarkUSA GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"zcrowleyTheMark/TheMarkUSA\")"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Helper Functions for The Mark, USA Inc","text":"begin, best convert numeric data use Mark USA, Inc. factor variables:","code":"library(TheMarkUSA)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"recodecat","dir":"","previous_headings":"Usage","what":"recodeCat()","title":"Helper Functions for The Mark, USA Inc","text":"recodeCat() helper function recode numeric data factor variables desired levels. recodeCat() takes two arguments: df Required, tibble data frame survey items numeric variables, anywhere 3 7 point scales, can single time point pre-post. scale_labels Required, character vector labels desired scale levels. function use vector convert numeric variables factor variables, must arranged low high exact number levels data contains, else NA returned. user simply passes data frame items recoded character vector 5 scale likert levels corresponding order numeric data.","code":"items <- dplyr::tibble(   Pre_Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Post_Organization = dplyr::if_else(Pre_Organization < 5, Pre_Organization + 1, Pre_Organization),   Pre_Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Post_Source = dplyr::if_else(Pre_Source < 4, Pre_Source + 2, Pre_Source),   Pre_Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Post_Publish = Pre_Publish + 2,   Pre_Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Post_Write = Pre_Write + 1,   Pre_Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4),   Post_Research = Pre_Research + 1 ) # scale_labels for 5 item example levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\") cat_items_1 <- TheMarkUSA::recodeCat(df = items, scale_labels = levels_min_ext) cat_items_1 #> # A tibble: 9 × 20 #>   Pre_Organization Post_Organization Pre_Source Post_Source Pre_Publish #>              <dbl>             <dbl>      <dbl>       <dbl>       <dbl> #> 1                1                 2          2           4           1 #> 2                2                 3          2           4           1 #> 3                3                 4          3           5           1 #> 4                4                 5          5           5           2 #> 5                5                 5          4           4           2 #> 6                4                 5          3           5           2 #> 7                3                 4          2           4           3 #> 8                2                 3          1           3           3 #> 9                1                 2          2           4           3 #> # ℹ 15 more variables: Post_Publish <dbl>, Pre_Write <dbl>, Post_Write <dbl>, #> #   Pre_Research <dbl>, Post_Research <dbl>, cat_Pre_Organization <fct>, #> #   cat_Post_Organization <fct>, cat_Pre_Source <fct>, cat_Post_Source <fct>, #> #   cat_Pre_Publish <fct>, cat_Post_Publish <fct>, cat_Pre_Write <fct>, #> #   cat_Post_Write <fct>, cat_Pre_Research <fct>, cat_Post_Research <fct>"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"data-visualizations-examples","dir":"","previous_headings":"","what":"Data Visualizations Examples","title":"Helper Functions for The Mark, USA Inc","text":"TheMarkUSA currently contains three helper functions generating visualizations: stackedBarChart(), divBarChart(), arrowChart().","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"stackedbarchart","dir":"","previous_headings":"Data Visualizations Examples","what":"stackedBarChart()","title":"Helper Functions for The Mark, USA Inc","text":"stackedBarChart() creates fully stacked bar chart branding/style Mark USA, Inc. stackedBarChart() takes 7 arguments, first 2 required: df Required, tibble data frame survey items categorical/factor variables, 5 point scales, can single time point pre-post, inserted stacked bar chart Mark USA branding. scale_labels Required, character vector 5 levels set scale plot. pre_post Default FALSE. true, returns pre-post stacked bar chart, arranged question. percent_label Default TRUE. Labels bars based percentages. FALSE, labels bars number answers per response. question_order Takes character vector sort order questions. Default NULL. question_labels Takes character vector label questions. Needs order question_order. Default NULL. width Input value 0.3 0.8 set thickness bars. Default NULL.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"single-time-point-data-with-percentage-labels-example-for-stackedbarchart","dir":"","previous_headings":"Data Visualizations Examples > stackedBarChart()","what":"Single Time Point Data with Percentage labels Example for stackedBarChart()","title":"Helper Functions for The Mark, USA Inc","text":"","code":"# Single time point data: items_single <- dplyr::tibble(   Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4), ) # scale_labels levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\") # Recode the numeric to factor variables using the levels from levels_min_ext: cat_items_single <- TheMarkUSA::recodeCat(items_single, levels_min_ext) # Select the factor variables: cat_items_single <- cat_items_single %>% dplyr::select(dplyr::where(is.factor)) # Pass the factor variables and the levels to 'stackedBarChart()': stacked_chart_single <- TheMarkUSA::stackedBarChart(   df = cat_items_single, scale_labels = levels_min_ext, width = 0.45 ) stacked_chart_single"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"pre-post-data-example-for-stackedbarchart","dir":"","previous_headings":"Data Visualizations Examples > stackedBarChart()","what":"Pre-Post Data Example for stackedBarChart()","title":"Helper Functions for The Mark, USA Inc","text":"","code":"# Select only the categorical/factor vars from the df in the from the oriinal recodeCat() in the first chunk (cat_items_1) using select(tidyselect::where(is.factor): cat_items_plot <- cat_items_1 %>% dplyr::select(tidyselect::where(is.factor))  # Run the function with the categorical items and the character vector of the factor levels: stacked_chart_pre_post <- TheMarkUSA::stackedBarChart(   df = cat_items_plot, scale_labels = levels_min_ext,   pre_post = TRUE, percent_label = FALSE )  stacked_chart_pre_post"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"divbarchart","dir":"","previous_headings":"Data Visualizations Examples","what":"divBarChart()","title":"Helper Functions for The Mark, USA Inc","text":"divBarChart() creates diverging fully stacked bar chart branding style Mark USA, Inc. divBarChart() takes six arguments, first two required: df Required, tibble data frame survey items categorical/factor variables, 5 point scales, must pre-post data, inserted stacked bar chart Mark USA branding. scale_labels Required, character vector levels factor variables added plot, set scale x-axis bar chart labels. percent_label Default TRUE. Labels bars based percentages. FALSE, labels bars number answers per response. question_order character vector sort order questions. Default NULL. question_labels character vector label questions. Needs order question_order. Default NULL. width Input value 0.3 0.8 set thickness bars. Default NULL.","code":"# Select only the categorical/factor vars from the df in the last chunk (cat_items_1) using tidy select(contains(\"cat\")): cat_items_plot <- cat_items_1 %>% dplyr::select(tidyselect::where(is.factor)) # Run the function with the categorical items and the character vector of the factor levels: div_chart_1 <- TheMarkUSA::divBarChart(   df = cat_items_plot, scale_labels = levels_min_ext,   percent_label = TRUE, width = 0.7 )  div_chart_1"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/index.html","id":"arrowchart","dir":"","previous_headings":"Data Visualizations Examples","what":"arrowChart()","title":"Helper Functions for The Mark, USA Inc","text":"arrowChart() take three arguments: df tibble/data frame survey items numeric variables, must 5 point scales pre-post, inserted stacked bar chart Mark USA branding. scale_labels character vector set labels x-axis, match numeric response data. group_colors character vector hex codes colors associate group , e.g. data two groups function creates overall group user needs pass function group_colors argument character vector three colors- colors need order want associated group based factor levels group variable, last color overall group “”. arrowChart() creates arrow chart numeric data based pre-post averages group overall group whole data set branding style Mark USA, Inc. arrowChart() sorts chart highest post scores top lowest bottom.  functions visuals added TheMarkUSA needed, sure reach ideas package issues!","code":"# Select only the numeric variables from the df in the last chunk (cat_items_1) using tidy select(contains(\"cat\")), adding a group variable that is set as a factor: arrow_items <- cat_items_1 %>%   dplyr::select(tidyselect::where(is.numeric)) %>%   dplyr::mutate(     group = c(       \"grad\", \"undergrad\", \"grad\", \"undergrad\", \"grad\", \"undergrad\", \"undergrad\", \"grad\", \"undergrad\"     ),     group = factor(group, levels = c(\"grad\", \"undergrad\"))   ) # Set up the labels for the x-axis, this will match the numeric response in the data: levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\")  threeScale_theMark_colors <- c(\"#79AB53\", \"#4B9FA6\", \"#2C2C4F\")  # Run the function with the first argument being the data frame of numeric items and factor group variable, second argument is the levels for the x-axis labels, and the third argument is the colors to pass as the  and the character vector of the factor levels: arrow_chart_1 <- TheMarkUSA::arrowChart(df = arrow_items, scale_labels = levels_min_ext, group_colors = threeScale_theMark_colors)  arrow_chart_1"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/TheMarkUSA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"TheMarkUSA: Helper Functions for The Mark, USA Inc — TheMarkUSA-package","title":"TheMarkUSA: Helper Functions for The Mark, USA Inc — TheMarkUSA-package","text":"goal TheMarkUSA make data cleaning creation visualizations easier faster Mark USA, Inc. TheMarkUSA contains functions create visuals Mark USA branding helper functions common data cleaning manipulation tasks use everyone Mark USA, Inc.","code":""},{"path":[]},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/TheMarkUSA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TheMarkUSA: Helper Functions for The Mark, USA Inc — TheMarkUSA-package","text":"Maintainer: Zack Crowley zcrowley@themarkusa.com contributors: Mark, USA Inc. [copyright holder, funder]","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/arrowChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow Chart for The Mark USA, Inc. — arrowChart","title":"Arrow Chart for The Mark USA, Inc. — arrowChart","text":"arrowChart() creates pre-post arrow chart group averages returns ggplot object.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/arrowChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow Chart for The Mark USA, Inc. — arrowChart","text":"","code":"arrowChart(df, scale_labels, group_colors)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/arrowChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow Chart for The Mark USA, Inc. — arrowChart","text":"df tibble data frame numeric data categorical group variable split data, e.g. role, gender, education level, etc. scale_labels character vector labels x-axis, usually response set likert items, needs match number response items data. group_colors character vector hex codes colors associate group , e.g. data two groups function creates overall group function need 'group_colors' character vector three colors. 'group_colors' need order want associated group based factor levels group variable, last color overall group \"\".","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/arrowChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow Chart for The Mark USA, Inc. — arrowChart","text":"ggplot object plots items arrow bar chart.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/arrowChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow Chart for The Mark USA, Inc. — arrowChart","text":"","code":"items <- dplyr::tibble(   Pre_Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Post_Organization = dplyr::if_else(Pre_Organization < 5, Pre_Organization + 1, Pre_Organization),   Pre_Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Post_Source = dplyr::if_else(Pre_Source < 4, Pre_Source + 2, Pre_Source),   Pre_Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Post_Publish = Pre_Publish + 2,   Pre_Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Post_Write = Pre_Write + 1,   Pre_Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4),   Post_Research = Pre_Research + 1,   group = c(     \"grad\", \"grad\", \"grad\", \"grad\",     \"undergrad\", \"undergrad\", \"undergrad\", \"undergrad\", \"undergrad\"   ) ) levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\") items <- items %>% dplyr::mutate(   group = factor(group, levels = c(\"grad\", \"undergrad\")) ) threeScale_theMark_colors <- c(\"#79AB53\", \"#4B9FA6\", \"#2C2C4F\") arrowChart(df = items, scale_labels = levels_min_ext, group_colors = threeScale_theMark_colors)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/dataSumm.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a data frame that is a summary table of counts and percentages — dataSumm","title":"Creates a data frame that is a summary table of counts and percentages — dataSumm","text":"Creates data frame summary table counts percentages","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/dataSumm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a data frame that is a summary table of counts and percentages — dataSumm","text":"","code":"dataSumm(var, na.rm = TRUE)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/dataSumm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a data frame that is a summary table of counts and percentages — dataSumm","text":"var column selected tibble/data frame categorical/factor variable summarized table. na.rm Drops NA values. Defaults TRUE.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/dataSumm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a data frame that is a summary table of counts and percentages — dataSumm","text":"tibble data 5 columns: item, response, n_answers, percent_answers percent_answers_label. Item name original item, Response categorical responses possible item. n_answers count response, percent_answers percentage response percent_answers_label character variable percentage labelled percent sign use label.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/dataSumm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a data frame that is a summary table of counts and percentages — dataSumm","text":"","code":"data <- dplyr::tibble(   role = c(     \"Faculty\", \"Postdoc\", \"Undergraduate student\", \"Graduate student\",     \"Graduate student\", \"Postdoc\", \"Postdoc\", \"Faculty\",     \"Faculty\", \"Graduate student\", \"Graduate student\", \"Postdoc\",     \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Graduate student\",     \"Undergraduate student\", \"Undergraduate student\", \"NA\", \"NA\"   ) )  data %>%   dplyr::select(role) %>%   dataSumm() #> # A tibble: 5 × 5 #>   question response              n_answers percent_answers percent_answers_label #>   <chr>    <fct>                     <int>           <dbl> <chr>                 #> 1 role     Faculty                       8          0.364  36%                   #> 2 role     Graduate student              5          0.227  23%                   #> 3 role     Postdoc                       4          0.182  18%                   #> 4 role     Undergraduate student         3          0.136  14%                   #> 5 role     NA                            2          0.0909 9%                     # Includes NA values: data %>%   dplyr::select(role) %>%   dataSumm(na.rm = TRUE) #> # A tibble: 5 × 5 #>   question response              n_answers percent_answers percent_answers_label #>   <chr>    <fct>                     <int>           <dbl> <chr>                 #> 1 role     Faculty                       8          0.364  36%                   #> 2 role     Graduate student              5          0.227  23%                   #> 3 role     Postdoc                       4          0.182  18%                   #> 4 role     Undergraduate student         3          0.136  14%                   #> 5 role     NA                            2          0.0909 9%"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/divBarChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","title":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","text":"Diverging Stacked Bar Chart Mark USA, Inc.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/divBarChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","text":"","code":"divBarChart(   df,   scale_labels,   percent_label = TRUE,   question_order = NULL,   question_labels = NULL,   width = NULL )"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/divBarChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","text":"df tibble/data frame survey items categorical/character variables, 5 point scales pre-post, inserted diverging bar chart Mark USA branding. scale_labels Required, character vector 5 levels set scale plot. percent_label Default TRUE. FALSE, labels bars number answers per response. question_order Takes character vector sort order questions. Default NULL. question_labels Takes character vector label questions. Needs order question_order. Default NULL. width Input value 0.3 0.8 set thickness bars. Default NULL.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/divBarChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","text":"ggplot object plots items diverging stacked bar chart ggplot object. chart sorted highest positive valence post items top, user supplied question order.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/divBarChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diverging and Stacked Bar Chart for The Mark USA, Inc. — divBarChart","text":"","code":"items <- dplyr::tibble(   Pre_Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Post_Organization = dplyr::if_else(Pre_Organization < 5, Pre_Organization + 1, Pre_Organization),   Pre_Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Post_Source = dplyr::if_else(Pre_Source < 4, Pre_Source + 2, Pre_Source),   Pre_Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Post_Publish = Pre_Publish + 2,   Pre_Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Post_Write = Pre_Write + 1,   Pre_Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4),   Post_Research = Pre_Research + 1 ) levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\")  # Recode the numeric to factor variables using the levels from levels_min_ext: cat_items <- TheMarkUSA::recodeCat(items, levels_min_ext)  # Select the factor variables: cat_items <- cat_items %>% dplyr::select(dplyr::where(is.factor))  divBarChart(cat_items, levels_min_ext)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/horzBarChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","title":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","text":"Horizontal Bar Chart Mark USA, Inc.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/horzBarChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","text":"","code":"horzBarChart(df, scale_colors, width = NULL)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/horzBarChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","text":"df Required, tibble data frame pre-processed dataSumm(). scale_colors Required, character vector colors scale items. width Input value 0.3 0.8 set thickness bars. Default NULL.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/horzBarChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","text":"ggplot object plots items stacked bar chart can exported.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/horzBarChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Horizontal Bar Chart for The Mark USA, Inc. — horzBarChart","text":"","code":"data <- dplyr::tibble(   role = c(     \"Faculty\", \"Postdoc\", \"Undergraduate student\", \"Graduate student\",     \"Graduate student\", \"Postdoc\", \"Postdoc\", \"Faculty\",     \"Faculty\", \"Graduate student\", \"Graduate student\", \"Postdoc\",     \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Graduate student\",     \"Undergraduate student\", \"Undergraduate student\"   ) )  role_summ <- data %>%   dplyr::select(role) %>%   TheMarkUSA::dataSumm()  role_color <- c(\"#2C2C4F\", \"#4B9FA6\", \"#79AB53\", \"#767171\")  horzBarChart(df = role_summ, scale_colors = role_color, width = 0.6)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/recodeCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Numeric Variables to Factors Variables — recodeCat","title":"Recode Numeric Variables to Factors Variables — recodeCat","text":"Recode Numeric Variables Factors Variables","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/recodeCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Numeric Variables to Factors Variables — recodeCat","text":"","code":"recodeCat(df, scale_labels)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/recodeCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Numeric Variables to Factors Variables — recodeCat","text":"df tibble/data frame survey items numeric variables need converted factor variables. scale_labels character vector levels set numeric variables factor/categorical values","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/recodeCat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Numeric Variables to Factors Variables — recodeCat","text":"tibble original numeric variables along new variables mapped categorical values scale_labels character vector.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/recodeCat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Numeric Variables to Factors Variables — recodeCat","text":"","code":"items <- dplyr::tibble(   Pre_Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Post_Organization = dplyr::if_else(Pre_Organization < 5, Pre_Organization + 1, Pre_Organization),   Pre_Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Post_Source = dplyr::if_else(Pre_Source < 4, Pre_Source + 2, Pre_Source),   Pre_Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Post_Publish = Pre_Publish + 2,   Pre_Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Post_Write = Pre_Write + 1,   Pre_Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4),   Post_Research = Pre_Research + 1 ) levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\") recodeCat(items, levels_min_ext) #> # A tibble: 9 × 20 #>   Pre_Organization Post_Organization Pre_Source Post_Source Pre_Publish #>              <dbl>             <dbl>      <dbl>       <dbl>       <dbl> #> 1                1                 2          2           4           1 #> 2                2                 3          2           4           1 #> 3                3                 4          3           5           1 #> 4                4                 5          5           5           2 #> 5                5                 5          4           4           2 #> 6                4                 5          3           5           2 #> 7                3                 4          2           4           3 #> 8                2                 3          1           3           3 #> 9                1                 2          2           4           3 #> # ℹ 15 more variables: Post_Publish <dbl>, Pre_Write <dbl>, Post_Write <dbl>, #> #   Pre_Research <dbl>, Post_Research <dbl>, cat_Pre_Organization <fct>, #> #   cat_Post_Organization <fct>, cat_Pre_Source <fct>, cat_Post_Source <fct>, #> #   cat_Pre_Publish <fct>, cat_Post_Publish <fct>, cat_Pre_Write <fct>, #> #   cat_Post_Write <fct>, cat_Pre_Research <fct>, cat_Post_Research <fct>"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/stackedBarChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","title":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","text":"Stacked Bar Chart Mark USA, Inc.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/stackedBarChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","text":"","code":"stackedBarChart(   df,   scale_labels,   pre_post = FALSE,   percent_label = TRUE,   question_order = NULL,   question_labels = NULL,   width = NULL )"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/stackedBarChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","text":"df Required, tibble/data frame survey items categorical/character variables, 5 point scales pre-post, inserted stacked bar chart Mark USA branding. scale_labels Required, character vector 5 levels set scale plot. pre_post Default FALSE. true, returns pre-post stacked bar chart. percent_label Default TRUE. FALSE, labels bars number answers per response. question_order Takes character vector sort order questions. Default NULL. question_labels Takes character vector label questions. Needs order question_order. Default NULL. width Input value 0.3 0.8 set thickness bars. Default NULL.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/stackedBarChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","text":"ggplot object plots items stacked bar chart can exported.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/stackedBarChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stacked Bar Chart for The Mark USA, Inc. — stackedBarChart","text":"","code":"items <- dplyr::tibble(   Pre_Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Post_Organization = dplyr::if_else(Pre_Organization < 5, Pre_Organization + 1, Pre_Organization),   Pre_Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Post_Source = dplyr::if_else(Pre_Source < 4, Pre_Source + 2, Pre_Source),   Pre_Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Post_Publish = Pre_Publish + 2,   Pre_Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Post_Write = Pre_Write + 1,   Pre_Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4),   Post_Research = Pre_Research + 1 )  items_single <- dplyr::tibble(   Organization = c(1, 2, 3, 4, 5, 4, 3, 2, 1),   Source = c(2, 2, 3, 5, 4, 3, 2, 1, 2),   Publish = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   Write = c(2, 2, 2, 3, 3, 3, 4, 4, 4),   Research = c(1, 1, 2, 2, 3, 3, 4, 4, 4), )  levels_min_ext <- c(\"Minimal\", \"Slight\", \"Moderate\", \"Good\", \"Extensive\") # Recode the numeric to factor variables using the levels from levels_min_ext: cat_items <- TheMarkUSA::recodeCat(items, levels_min_ext) cat_items_single <- TheMarkUSA::recodeCat(items_single, levels_min_ext)  # Select the factor variables: cat_items <- cat_items %>% dplyr::select(dplyr::where(is.factor)) cat_items_single <- cat_items_single %>% dplyr::select(dplyr::where(is.factor))  # Pass the factor variables and the levels to 'stackedBarChart()': stackedBarChart(   df = cat_items, pre_post = TRUE, scale_labels = levels_min_ext,   question_order = NULL, question_labels = NULL, percent_label = TRUE, width = NULL )  stackedBarChart(   df = cat_items_single, pre_post = FALSE, scale_labels = levels_min_ext,   question_order = NULL, question_labels = NULL, percent_label = TRUE, width = NULL )"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tblSumm.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","title":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","text":"Creates summary table counts percentages data frame pre-processed dataSumm() returns flextable object.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tblSumm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","text":"","code":"tblSumm(df, totals = TRUE)"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tblSumm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","text":"df data frame pre-processed dataSumm() summary includes 5 columns: item, response, n_answers, percent_answers percent_answers_label. Item name original item, Response categorical responses possible item. n_answers count response, percent_answers percentage response percent_answers_label character variable percentage labelled percent sign use label. totals true, returns summary table last row totals, false, final row totals. Set True default.","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tblSumm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","text":"flextable() object 3 columns, response, counts percentages, Colors set Mark, USA Inc. branding","code":""},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tblSumm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a summary table of counts and percentages from a data frame pre-processed with the\ndataSumm() and returns a flextable object. — tblSumm","text":"Response Percent Count Faculty 40% 8 Graduate student 25% 5 Postdoc 20% 4 Undergraduate student 15% 3 Total - 20","code":"data <- dplyr::tibble(   role = c(     \"Faculty\", \"Postdoc\", \"Undergraduate student\", \"Graduate student\",     \"Graduate student\", \"Postdoc\", \"Postdoc\", \"Faculty\",     \"Faculty\", \"Graduate student\", \"Graduate student\", \"Postdoc\",     \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Faculty\", \"Graduate student\",     \"Undergraduate student\", \"Undergraduate student\"   ) )  role_summ <- data %>%   dplyr::select(role) %>%   TheMarkUSA::dataSumm()  role_summ %>% tblSumm() .cl-d2f5b12a{}.cl-d2ed6b32{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-d2ed6b46{font-family:'DejaVu Sans';font-size:14pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-d2ed6b47{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-d2f0fd74{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-d2f0fd7e{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-d2f1184a{width:2.075in;background-color:rgba(44, 44, 79, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11854{width:0.869in;background-color:rgba(44, 44, 79, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1185e{width:0.739in;background-color:rgba(44, 44, 79, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1185f{width:2.075in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11868{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11869{width:0.739in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1186a{width:2.075in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11872{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1187c{width:0.739in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1187d{width:2.075in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f1187e{width:0.869in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11886{width:0.739in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11887{width:2.075in;background-color:rgba(246, 246, 246, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11888{width:0.869in;background-color:rgba(246, 246, 246, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d2f11890{width:0.739in;background-color:rgba(246, 246, 246, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}ResponsePercentCountFaculty40%8Graduate student25%5Postdoc20%4Undergraduate student15%3Total-20"},{"path":"https://zcrowleythemark.github.io/TheMarkUSA/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"}]
